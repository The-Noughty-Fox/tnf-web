AWSTemplateFormatVersion: 2010-09-09

## =================== DESCRIPTION =================== ##
Description: >-
  AWS CloudFormation template for automatically build of static website hosted on S3
  - Create a new S3 bucket and it's policy, configure it to host a static website
  - Create a CodeBuild project to build the static website
  - Create a CodeBuild project role with necessary permissions
  - Create a CloudWatch log group for CodeBuild project


## =================== PARAMETERS =================== ##
Parameters:
  paramPersonalGitHubAccessToken:
    Type: String
    MinLength: 10
    ConstraintDescription: Personal GitHub access token is missing
    Description: Provide your personal GitHub access token for CodeBuild to access your GitHub repo

  paramGitHubLink:
    Type: String
    Description: Provide your GitHub link with source code for static website
    Default: https://github.com/The-Noughty-Fox/tnf-web

  paramStaticWebsiteHostingBucketName:
    Description: Specify a unique name for S3 bucket that will host static website
    Type: String
    Default: website-hosting-bucket
    AllowedPattern: "(?!(^xn--|.+-s3alias$))^[a-z0-9][a-z0-9-]{1,61}[a-z0-9]$"  # includes using S3 Transfer Acceleration
    ConstraintDescription: Bucket names must be between 3 (min) and 63 (max) characters long, can consist only of lowercase letters, numbers, dots, and hyphens, must begin and end with a letter or number, etc.

  paramUniqueTagName:
    Description: Specify a unique name for tag
    Type: String
    Default: static-website-hosting-to-s3
    AllowedPattern: "[\\x20-\\x7E]*"
    ConstraintDescription: Must contain only ASCII characters

## =================== RESOURCES =================== ##
Resources:

#   Create a new S3 bucket and configure it to host a static website
  staticWebsiteHostingBucket:
    Type: 'AWS::S3::Bucket'
    DeletionPolicy: Delete #allow CloudFormation delete the bucket when stack is deleted
    Properties:
      BucketName: !Ref paramStaticWebsiteHostingBucketName
      WebsiteConfiguration:
        IndexDocument: blog/index.html
        ErrorDocument: 404.html
      VersioningConfiguration:
        Status: Enabled
      # AccessControl: PublicRead # throws an error: Bucket cannot have public ACLs set with BlockPublicAccess enabled
      OwnershipControls:
        Rules:
          - ObjectOwnership: ObjectWriter
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false
      Tags:
        - Key: tnf-blog-cloudformation
          Value:  !Ref paramUniqueTagName


  # Create a policy for staticWebsiteHostingBucket to give a public access to website
  staticWebsiteHostingBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref staticWebsiteHostingBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal: '*'
            Action: 's3:GetObject'
            Resource: !Join
              - ''
              - - 'arn:aws:s3:::'
                - !Ref staticWebsiteHostingBucket
                - /*

  codeBuildSourceCredential:
    Type: AWS::CodeBuild::SourceCredential
    Properties:
      AuthType: PERSONAL_ACCESS_TOKEN
      ServerType: GITHUB
      Token: !Ref paramPersonalGitHubAccessToken

  codeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: codebuild-for-tnf-blog
      Description: CodeBuild project for automatically build of static website hosted on s3
      Source:
        Type: GITHUB
        Location: https://github.com/The-Noughty-Fox/tnf-web.git
        GitCloneDepth: 1
        BuildSpec: apps/tnf-blog/buildspec.yml
        Auth:
          Resource: !Ref codeBuildSourceCredential
          Type: OAUTH
      Triggers:
        Webhook: true
        FilterGroups:
          - - Type: EVENT
              Pattern: PUSH
            - Type: HEAD_REF
              Pattern: ^refs/heads/main # for feature branches use: ^refs/heads/feature/.*
      Environment: # use Ubuntu standard v7
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:7.0
      Artifacts: # drop the build artifacts of S3 bucket that hosts static website
        Type: S3
        Name: '/' # store the artifact in the root of the output bucket
        Location: !Sub arn:aws:s3:::tnf-blog-bucket
        EncryptionDisabled: True #disable the encryption of artifacts in a build to see html pages
      LogsConfig:
        CloudWatchLogs:
          Status: ENABLED
          GroupName: tnf-blog-cloudwatch-logs
      ServiceRole: !Ref codeBuildProjectRole

  codeBuildProjectRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: tnf-blog-codebuild-role
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
      Policies:
        - PolicyName: tnf-blog-codebuild-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              # statement to create/stream CloudWatch
              - Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Effect: Allow
                Resource:
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:tnf-blog-cloudwatch-logs
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:tnf-blog-cloudwatch-logs:*
              # statement to access S3 bucket that hosts static website (CodeBuild will save Artifacts there)
              - Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketAcl
                  - s3:GetBucketLocation
                Effect: Allow
                Resource:
                  - arn:aws:s3:::tnf-blog-bucket
                  - arn:aws:s3:::tnf-blog-bucket/*

## =================== OUTPUT =================== ##
Outputs:
  outputWebsiteURL:
    Value: !GetAtt
      - staticWebsiteHostingBucket
      - WebsiteURL
    Description: Static website URL

  outputCodeBuildProject:
    Description: CodeBuild project name
    Value: !Ref codeBuildProject
