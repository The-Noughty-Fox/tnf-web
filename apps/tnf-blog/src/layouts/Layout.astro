---
import '../styles/global.css';
import { screens } from '@tnf-workspace/ts-lib';
import { Bootstrap } from '../components/bootstrap'
import { containerPx, containerPxLg, containerPxMd } from '../../../../ts-lib/src';
import { Header } from '@tnf-workspace/react-components'
import { Footer } from '../components/footer'
import { pageRoutes } from '../lib/pageRoutes'
interface Props {
	title: string;
}

const { title } = Astro.props;
const links = [
  {name: pageRoutes.services.label, href: pageRoutes.services.href },
  {name: pageRoutes.portfolio.label, href: pageRoutes.services.href },
  {name: pageRoutes.contactUs.label, href: pageRoutes.contactUs.href},
  {name: pageRoutes.blog.label, href: pageRoutes.blog.href }
]
---

<!doctype html>
<html lang="en">
	<head>
    <script is:inline>
      if (localStorage.theme === 'dark' || (!('theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
        document.documentElement.classList.add('dark')
        localStorage.theme = 'dark'
      } else {
        document.documentElement.classList.remove('dark')
        localStorage.theme = 'light'
      }
    </script>

		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/x-icon" href="/favicon.ico">
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100..900;1,100..900&display=swap"
          rel="stylesheet">
	</head>

	<body>
       <div class="flex flex-col h-full">
         <Bootstrap client:load />
         <Header client:load links={links} homeLink={import.meta.env.PUBLIC_TNF_DOMAIN} />
         <main class="flex-1">
           <slot />
         </main>

         <Footer client:load />
       </div>
	</body>
</html>


<style is:global lang="scss" define:vars={{
  'screen-sm': `${screens.sm}px`,
  'screen-md': `${screens.md}px`,
  'screen-lg': `${screens.lg}px`,
  'screen-xl': `${screens.xl}px`,
  'container-px': `${containerPx}px`,
  'container-px-md': `${containerPxMd}px`,
  'container-px-lg': `${containerPxLg}px`,
}}>
:root {
    --full-width: calc(100vw - var(--scrollbar-width, 0px));
}

body {
  @apply m-0 text-woodsmoke-50 bg-woodsmoke-950;
}

.bleed {
  margin: 0 calc(-50vw + 50% + var(--scrollbar-width, 0px) / 2 + env(safe-area-inset-left, 0) / 2 + env(safe-area-inset-right, 0) / 2);
}

h1 {
  @apply text-h1;
}

h2 {
  @apply text-[2rem];
}

h3 {
  @apply text-[1.75rem];
}

h4 {
  @apply text-[1.5rem];
}

h5 {
  @apply text-[1.25rem];
}

h6 {
  @apply text-[1rem];
}

blockquote {
  @apply text-[18px] text-woodsmoke-50 border-l-[5px] italic border-woodsmoke-300 bg-woodsmoke-700 my-5 mx-auto p-5;
}

cite {
  @apply text-[0.875rem] italic text-woodsmoke-200;
}

ul, ol {
  @apply pl-5;
}

strong {
  @apply font-bold;
}

hr {
  @apply py-5;
  border: 0;
  border-top: 1px solid #ccc;
}

.highlight-red {
  color: red;
}

.highlight-blue {
  color: blue;
}

article > .post {
  @apply max-w-[var(--container-post)] mx-auto;

  h1, h2, h3, h4, h5, h6 {
    @apply text-woodsmoke-50;
    margin-top: 1.5em;
    margin-bottom: 0.5em;
    font-weight: bold;
  }
}

.post h1, .post h2, .post h3, .post h4, .post h5, .post h6 {
  @apply mb-6;
}

.post p {
  font-size: 18px;
}

.post p + p {
  margin-top: 1.5em;
}

.post figure {
  @apply my-8;
}

.post figure figcaption {
  @apply mt-1 text-center;
}

.post pre {
  @apply my-8 p-4;
}

.post {
  a {
    @apply text-orange-300;
    text-decoration: none; /* Remove underline */
    font-size: inherit; /* Inherit font size from parent */
    transition: color 0.3s ease; /* Smooth transition for color change */
  }

  a:hover,
  a:focus {
    @apply text-orange-500;
    text-decoration: underline; /* Add underline on hover and focus */
  }

  a:active {
    @apply text-orange-600;
  }

  a:visited {
    @apply text-orange-700;
  }

  ul, ol {
    list-style-type: revert;
  }
}

.image {
  @apply w-full h-full object-cover object-center block aspect-square md:aspect-video;
}

.swiper-slide {
  width: auto !important;
}

.footnotes {
  @apply mt-8 p-4 border-2 border-orange-900;
}
</style>

